apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.modrinth.minotaur"

archivesBaseName = "${rootProject.archives_base_name}-${project.name}"

architectury {
    platformSetupLoomIde()
    forge()
}

loom {
    accessWidenerPath.set(project(":common").file("src/main/resources/ecologics.accesswidener"))

    forge {
        mixinConfig "ecologics-common.mixins.json"
        mixinConfig "ecologics.mixins.json"
        convertAccessWideners.set(true)
    }
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

processResources {
    inputs.property "version", rootProject.mod_version

    filesMatching("META-INF/mods.toml") {
        expand "version": rootProject.mod_version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    archiveClassifier = null
}

jar {
    archiveClassifier = "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}

modrinth {
    projectId = 'ecologics'
    uploadFile = remapJar
    versionNumber = mod_version
    versionName = "Ecologics $mod_version (${name.substring(0, 1).toUpperCase()}${name.substring(1)} $minecraft_version)"
    changelog = rootProject.file("CHANGELOG.md").text
}